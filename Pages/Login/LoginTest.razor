@page "/loginindexes"
@layout LoginLayout
@using GestorDeGastosBS.Data.Response
@using GestorDeGastosBS.Authentication
@inject IUserAccountService userAccountService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager urlHelper

<section class="min-vh-100 gradient-custom d-flex ">
  <div class="container align-items-center">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-12 col-md-8 col-lg-6 col-xl-5">
        <div class="card bg-dark text-white" style="border-radius: 1rem;">
          <div class="card-body p-5 text-center">
            
            @* <div class="mb-md-5 mt-md-4 pb-5"></div> *@
            <div class=@*"mb-md-5 mt-md-4 pb-2"*@>
                
              <h2 class="fw-bold mb-2  text-uppercase">Auto Adornos</h2>
              <img class="mb-2" src="img/Sis-logo-removebg-preview.png" alt="" width="128" height="128">
              <p class="text-white-50 mb-3">¡Por favor, introduce tu usuario y contraseña!</p>

              <div class="form-outline form-white mb-4">
                <input @bind="model.UserName" type="email" id="typeEmailX" class="form-control " placeholder="E-mail address or Name"/>
              </div>

              <div class="form-outline form-white mb-4">
                <input @bind="model.Password" type="password" id="typePasswordX" class="form-control" placeholder="Password"/>
              </div>

              <p class="small mb-5 pb-lg-2"><a class="text-white-50" href="#!">¿Has olvidado tu contraseña?</a></p>

              <button @onclick="Authenticate" class="btn btn-outline-light btn-outline-primary:hover btn-lg px-5" type="submit">Login</button>
              <button class="btn btn-outline-light btn-lg px-4" type="submit">Registrarse</button>

              @* <div class="d-flex justify-content-center text-center mt-4 pt-1">
                <a href="#!" class="text-white"><i class="fab fa-facebook-f fa-lg"></i></a>
                <a href="#!" class="text-white"><i class="fab fa-twitter fa-lg mx-4 px-2"></i></a>
                <a href="#!" class="text-white"><i class="fab fa-google fa-lg"></i></a>
              </div> *@

            </div>


          </div>
        </div>
      </div>
    </div>
  </div>
</section>
@code{
    public class Model
    {
        public string? UserName { get; set; }
        public string? Password { get; set; }
    }
    private Model model = new Model();

    public List<UsuarioResponse> Usuarios { get; set; } = new List<UsuarioResponse>();

    private async Task Authenticate() 
    {
        var userAccount = await userAccountService.GetByUserName(model.UserName!);
        if(userAccount == null || userAccount.Password != model.Password)
        {
          await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
          return;
        }
        var CustomAuthenticationStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await CustomAuthenticationStateProvider.UpdateAuthenticationState(new UserSession
        {
            UserName = userAccount.UserName,
            Role = userAccount.Role
        });
        urlHelper.NavigateTo("/", true);
    }

}